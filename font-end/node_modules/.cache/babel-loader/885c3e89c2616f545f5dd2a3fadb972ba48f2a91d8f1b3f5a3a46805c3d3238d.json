{"ast":null,"code":"var _jsxFileName = \"E:\\\\thuctap3\\\\TTCN-wido\\\\font-end\\\\src\\\\components\\\\uploadModal.js\",\n  _s = $RefreshSig$();\nimport \"../styles/uploadmodal.scss\";\nimport React, { useState, useRef } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport useForm from \"./UseForm\";\nimport UploadFile from \"./uploadfile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadModal() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const apiCreatePost = \"http://localhost:8000/api/post/create\";\n  //xu ly post\n  //bien xu ly form\n  const formElement = useRef(null);\n  const {\n    handleSubmit,\n    status,\n    message\n  } = useForm({\n    form: formElement.current,\n    endpointUrl: apiCreatePost\n  });\n  //xu ly change anh\n  const handleImageChange = e => {\n    // console.log(e.target.files[])\n    if (e.target.files) {\n      const filesArray = Array.from(e.target.files).map(file => URL.createObjectURL(file));\n\n      // console.log(\"filesArray: \", filesArray);\n\n      setSelectedFiles(prevImages => prevImages.concat(filesArray));\n      Array.from(e.target.files).map(file => URL.revokeObjectURL(file) // avoid memory leak\n      );\n    }\n  };\n\n  const renderPhotos = source => {\n    console.log(\"source: \", source);\n    return source.map(photo => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imgUp\",\n        src: photo,\n        alt: \"\"\n      }, photo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fileSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: uploadFileHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), !fileSize && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"File size exceeded!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), fileUploadProgress && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Uploading File(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), fileUploadResponse != null && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: fileUploadResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadModal, \"OBR5yfXHxvFaPXM6cyErVcFTWbc=\", false, function () {\n  return [useForm];\n});\n_c = UploadModal;\nexport default UploadModal;\nvar _c;\n$RefreshReg$(_c, \"UploadModal\");","map":{"version":3,"names":["React","useState","useRef","Button","useForm","UploadFile","UploadModal","selectedFiles","setSelectedFiles","apiCreatePost","formElement","handleSubmit","status","message","form","current","endpointUrl","handleImageChange","e","target","files","filesArray","Array","from","map","file","URL","createObjectURL","prevImages","concat","revokeObjectURL","renderPhotos","source","console","log","photo","fileSubmitHandler","uploadFileHandler","fileSize","color","fileUploadProgress","fileUploadResponse"],"sources":["E:/thuctap3/TTCN-wido/font-end/src/components/uploadModal.js"],"sourcesContent":["import \"../styles/uploadmodal.scss\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useForm from \"./UseForm\";\r\nimport UploadFile from \"./uploadfile\";\r\n\r\nfunction UploadModal() {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const apiCreatePost = \"http://localhost:8000/api/post/create\";\r\n  //xu ly post\r\n  //bien xu ly form\r\n  const formElement = useRef(null);\r\n\r\n  const { handleSubmit, status, message } = useForm({\r\n    form: formElement.current,\r\n    endpointUrl: apiCreatePost,\r\n  });\r\n  //xu ly change anh\r\n  const handleImageChange = (e) => {\r\n    // console.log(e.target.files[])\r\n    if (e.target.files) {\r\n      const filesArray = Array.from(e.target.files).map((file) =>\r\n        URL.createObjectURL(file)\r\n      );\r\n\r\n      // console.log(\"filesArray: \", filesArray);\r\n\r\n      setSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n      Array.from(e.target.files).map(\r\n        (file) => URL.revokeObjectURL(file) // avoid memory leak\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderPhotos = (source) => {\r\n    console.log(\"source: \", source);\r\n    return source.map((photo) => {\r\n      return <img className=\"imgUp\" src={photo} alt=\"\" key={photo} />;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload\">\r\n      <form onSubmit={fileSubmitHandler}>\r\n        <input type=\"file\" multiple onChange={uploadFileHandler} />\r\n        <button type=\"submit\">Upload</button>\r\n        {!fileSize && <p style={{ color: \"red\" }}>File size exceeded!!</p>}\r\n        {fileUploadProgress && (\r\n          <p style={{ color: \"red\" }}>Uploading File(s)</p>\r\n        )}\r\n        {fileUploadResponse != null && (\r\n          <p style={{ color: \"green\" }}>{fileUploadResponse}</p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default UploadModal;\r\n"],"mappings":";;AAAA,OAAO,4BAA4B;AACnC,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMQ,aAAa,GAAG,uCAAuC;EAC7D;EACA;EACA,MAAMC,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAM;IAAES,YAAY;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGT,OAAO,CAAC;IAChDU,IAAI,EAAEJ,WAAW,CAACK,OAAO;IACzBC,WAAW,EAAEP;EACf,CAAC,CAAC;EACF;EACA,MAAMQ,iBAAiB,GAAIC,CAAC,IAAK;IAC/B;IACA,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,EAAE;MAClB,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACL,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAACI,GAAG,CAAEC,IAAI,IACrDC,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAC1B;;MAED;;MAEAjB,gBAAgB,CAAEoB,UAAU,IAAKA,UAAU,CAACC,MAAM,CAACR,UAAU,CAAC,CAAC;MAC/DC,KAAK,CAACC,IAAI,CAACL,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAACI,GAAG,CAC3BC,IAAI,IAAKC,GAAG,CAACI,eAAe,CAACL,IAAI,CAAC,CAAC;MAAA,CACrC;IACH;EACF,CAAC;;EAED,MAAMM,YAAY,GAAIC,MAAM,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,MAAM,CAAC;IAC/B,OAAOA,MAAM,CAACR,GAAG,CAAEW,KAAK,IAAK;MAC3B,oBAAO;QAAK,SAAS,EAAC,OAAO;QAAC,GAAG,EAAEA,KAAM;QAAC,GAAG,EAAC;MAAE,GAAMA,KAAK;QAAA;QAAA;QAAA;MAAA,QAAI;IACjE,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA,uBACrB;MAAM,QAAQ,EAAEC,iBAAkB;MAAA,wBAChC;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ;QAAC,QAAQ,EAAEC;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3D;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,EACpC,CAACC,QAAQ,iBAAI;QAAG,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,EACjEC,kBAAkB,iBACjB;QAAG,KAAK,EAAE;UAAED,KAAK,EAAE;QAAM,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5B,EACAE,kBAAkB,IAAI,IAAI,iBACzB;QAAG,KAAK,EAAE;UAAEF,KAAK,EAAE;QAAQ,CAAE;QAAA,UAAEE;MAAkB;QAAA;QAAA;QAAA;MAAA,QAClD;IAAA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAlDQnC,WAAW;EAAA,QAOwBF,OAAO;AAAA;AAAA,KAP1CE,WAAW;AAmDpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}