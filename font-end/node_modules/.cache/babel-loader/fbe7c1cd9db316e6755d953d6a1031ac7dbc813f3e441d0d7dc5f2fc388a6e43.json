{"ast":null,"code":"var _jsxFileName = \"E:\\\\thuctap3\\\\TTCN-wido\\\\font-end\\\\src\\\\components\\\\uploadfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadFile = _ref => {\n  _s();\n  let {} = _ref;\n  const [files, setFiles] = useState(\"\");\n  //state for checking file size\n  const [fileSize, setFileSize] = useState(true);\n  // for file upload progress message\n  const [fileUploadProgress, setFileUploadProgress] = useState(false);\n  //for displaying response message\n  const [fileUploadResponse, setFileUploadResponse] = useState(null);\n  //base end point url\n  const FILE_UPLOAD_BASE_ENDPOINT = \"http://localhost:8000/api/post/create\";\n  const headers = {\n    \"x-access-token\": localStorage.getItem(\"token\")\n  };\n  const uploadFileHandler = event => {\n    setFiles(event.target.files);\n  };\n  const fileSubmitHandler = event => {\n    event.preventDefault();\n    setFileSize(true);\n    setFileUploadProgress(true);\n    setFileUploadResponse(null);\n    const formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      if (files[i].size > 10240000000000000) {\n        setFileSize(false);\n        setFileUploadProgress(false);\n        setFileUploadResponse(null);\n        return;\n      }\n      formData.append(`multiple`, files[i]);\n    }\n    console.log(\"da ta post\", formData);\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\")\n      },\n      body: formData\n    };\n    fetch(FILE_UPLOAD_BASE_ENDPOINT, requestOptions).then(async response => {\n      var _response$headers$get;\n      const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n      const data = isJson && (await response.json());\n\n      // check for error response\n      if (!response.ok) {\n        // get error message\n        const error = data && data.message || response.status;\n        setFileUploadResponse(data.message);\n        return Promise.reject(error);\n      }\n      console.log(data.message);\n      setFileUploadResponse(data.message);\n    }).catch(error => {\n      console.error(\"Error while uploading file!\", error);\n      console.log(\"da ta post\", formData);\n    });\n    setFileUploadProgress(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: fileSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: uploadFileHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), !fileSize && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"File size exceeded!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this), fileUploadProgress && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Uploading File(s)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }, this), fileUploadResponse != null && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: fileUploadResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadFile, \"cST8SD2CagBLUVtlEQ34jLW/ZUk=\");\n_c = UploadFile;\nexport default UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["React","useState","UploadFile","files","setFiles","fileSize","setFileSize","fileUploadProgress","setFileUploadProgress","fileUploadResponse","setFileUploadResponse","FILE_UPLOAD_BASE_ENDPOINT","headers","localStorage","getItem","uploadFileHandler","event","target","fileSubmitHandler","preventDefault","formData","FormData","i","length","size","append","console","log","requestOptions","method","Accept","body","fetch","then","response","isJson","get","includes","data","json","ok","error","message","status","Promise","reject","catch","color"],"sources":["E:/thuctap3/TTCN-wido/font-end/src/components/uploadfile.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst UploadFile = ({}) => {\r\n  const [files, setFiles] = useState(\"\");\r\n  //state for checking file size\r\n  const [fileSize, setFileSize] = useState(true);\r\n  // for file upload progress message\r\n  const [fileUploadProgress, setFileUploadProgress] = useState(false);\r\n  //for displaying response message\r\n  const [fileUploadResponse, setFileUploadResponse] = useState(null);\r\n  //base end point url\r\n  const FILE_UPLOAD_BASE_ENDPOINT = \"http://localhost:8000/api/post/create\";\r\n  const headers = {\r\n    \"x-access-token\": localStorage.getItem(\"token\"),\r\n  };\r\n  const uploadFileHandler = (event) => {\r\n    setFiles(event.target.files);\r\n  };\r\n\r\n  const fileSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    setFileSize(true);\r\n    setFileUploadProgress(true);\r\n    setFileUploadResponse(null);\r\n\r\n    const formData = new FormData();\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (files[i].size > 10240000000000000) {\r\n        setFileSize(false);\r\n        setFileUploadProgress(false);\r\n        setFileUploadResponse(null);\r\n        return;\r\n      }\r\n\r\n      formData.append(`multiple`, files[i]);\r\n    }\r\n    console.log(\"da ta post\",formData)\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: formData,\r\n    };\r\n    fetch(FILE_UPLOAD_BASE_ENDPOINT , requestOptions)\r\n      .then(async (response) => {\r\n        const isJson = response.headers\r\n          .get(\"content-type\")\r\n          ?.includes(\"application/json\");\r\n        const data = isJson && (await response.json());\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message\r\n          const error = (data && data.message) || response.status;\r\n          setFileUploadResponse(data.message);\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        console.log(data.message);\r\n        setFileUploadResponse(data.message);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error while uploading file!\", error);\r\n        console.log(\"da ta post\",formData);\r\n      });\r\n    setFileUploadProgress(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={fileSubmitHandler}>\r\n      <input type=\"file\" multiple onChange={uploadFileHandler} />\r\n      <button type=\"submit\">Upload</button>\r\n      {!fileSize && <p style={{ color: \"red\" }}>File size exceeded!!</p>}\r\n      {fileUploadProgress && <p style={{ color: \"red\" }}>Uploading File(s)</p>}\r\n      {fileUploadResponse != null && (\r\n        <p style={{ color: \"green\" }}>{fileUploadResponse}</p>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default UploadFile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}